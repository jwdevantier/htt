name: CI/Release

on:
  push:
    branches: [ main, master ]
    tags: [ 'v[0-9]+.[0-9]+.[0-9]+' ]
  pull_request:
    branches: [ main, master ]

jobs:
  test-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Zig
        uses: goto-bus-stop/setup-zig@v2
        with:
          version: 0.13.0
      - name: Build project
        run: zig build
      - name: Run Zig unit tests
        run: zig build test
      - name: Run HTT template tests
        run: ./zig-out/bin/htt tests/tpl/run_tests.lua
      - name: Run API unit tests
        run: ./zig-out/bin/htt tests/unit/run_tests.lua

  test-windows:
    needs: test-linux
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - name: Debug Git
        shell: bash
        run: |
          which git
          git --version
      - name: Setup Zig
        uses: goto-bus-stop/setup-zig@v2
        with:
          version: 0.13.0
      - name: Build project
        run: zig build
      - name: Run Zig unit tests
        run: zig build test
      - name: Run HTT template tests
        shell: bash
        run: ./zig-out/bin/htt.exe tests/tpl/run_tests.lua
      - name: Run API unit tests
        shell: bash
        run: ./zig-out/bin/htt.exe tests/unit/run_tests.lua

  test-macos:
    needs: test-linux
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Zig
        uses: goto-bus-stop/setup-zig@v2
        with:
          version: 0.13.0
      - name: Build project
        run: zig build
      - name: Run Zig unit tests
        run: zig build test
      - name: Run HTT template tests
        run: ./zig-out/bin/htt tests/tpl/run_tests.lua
      - name: Run API unit tests
        run: ./zig-out/bin/htt tests/unit/run_tests.lua

  release:
    needs: [test-windows, test-macos]
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    permissions:
      contents: write  # for release creation
      pages: write     # for gh-pages deployment
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Zig
        uses: goto-bus-stop/setup-zig@v2
        with:
          version: 0.13.0

      - name: Build HTT
        run: zig build

      - name: Create release directory
        run: mkdir -p releases

      - name: Build release binaries
        run: |
          # Linux x86_64
          zig build -Dtarget=x86_64-linux -Doptimize=ReleaseSafe
          cp zig-out/bin/htt releases/htt-linux-x86_64

          # Linux ARM64
          zig build -Dtarget=aarch64-linux -Doptimize=ReleaseSafe
          cp zig-out/bin/htt releases/htt-linux-arm64

          # Windows x86_64
          zig build -Dtarget=x86_64-windows -Doptimize=ReleaseSafe
          cp zig-out/bin/htt.exe releases/htt-windows-x86_64.exe

          # Windows ARM64
          zig build -Dtarget=aarch64-windows -Doptimize=ReleaseSafe
          cp zig-out/bin/htt.exe releases/htt-windows-arm64.exe

          # macOS ARM64
          zig build -Dtarget=aarch64-macos -Doptimize=ReleaseSafe
          cp zig-out/bin/htt releases/htt-macos-arm64

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: releases/*
          name: Release ${{ github.ref_name }}
          body: |
            Release ${{ github.ref_name }}
            
            Available binaries:
            - Linux (x86_64, ARM64)
            - Windows (x86_64, ARM64)
            - macOS (ARM64)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Documentation site generation and deployment
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.12.2'
          cache: 'npm'
          cache-dependency-path: './docs/package.json'

      - name: Install documentation dependencies
        working-directory: ./docs
        run: npm install

      - name: Generate documentation site
        run: ./zig-out/bin/htt ./docs/gensite.lua

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs/out
          force_orphan: true  # Make sure we don't accumulate history in gh-pages branch
