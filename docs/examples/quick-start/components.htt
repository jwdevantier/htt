% @component helloWorld
Hello, John!
% @end

% @component loop3
% for i = 1, 3 do
hello!
% end
% @end

% @component ifRender
% if 1 == 2 then
Math is broken!
% else
Phew! Math works
% end
% @end

% @component varExample
% local name = "Peter"
Hello, {{name}}!
2 + 2 is {{2 + 2}}
% @end

% @component child
Sincerely hello
  - Child
% @end

% @component parent
let's call the child:
{{@ child {} }}
% @end

% @component middleChild
--middle child
  {{@ child {} }}
% @end

% @component callWithIndentation
{{@ child {} }}
    {{@ middleChild {} }}
    {{@ child {} }}
% @end

% @component helloName
Hello, {{ctx.name or "John Doe"}}!
% @end

% @component callHelloNameNoArg
{{@ helloName {} }}
% @end

% @component callHelloNamePeter
{{@ helloName {name = "Peter"} }}
% @end

% @component lineCont
hello
~>world!
hello
~> world...
% @end

% @component lineContArr
% local sep = ctx.separator or ","
[
% for i, v in ipairs(ctx.lst) do
% local is_last = (i == #ctx.lst)
~> "{{v}}"{{not is_last and sep or ""}}
% end
~> ]
% @end

% @component callLineContArr
{{@ lineContArr {lst = {"one", "two", "three"} } }}
% @end
