
%local sitename = "HTT Documentation"
%local conf = require("conf")

% @component menuSection
% local section = ctx.section
<li>
    <div @click="openSections.includes('{{ section.title }}') ? openSections = openSections.filter(i => i !== '{{ section.title }}') : openSections.push('{{ section.title }}')"
            class="pl-2 flex justify-between items-center cursor-pointer text-blue-600 hover:bg-gray-200 py-2">
        <span>{{ section.title }}</span>
        <svg x-show="!openSections.includes('{{ section.title }}')" class="w-4 h-4 text-gray-500 mr-2" viewBox="0 0 24 24">
            <path fill="currentColor" d="M7.41,8.58L12,13.17L16.59,8.58L18,10L12,16L6,10L7.41,8.58Z" />
        </svg>
        <svg x-show="openSections.includes('{{ section.title }}')" class="w-4 h-4 text-gray-500 mr-2" viewBox="0 0 24 24">
            <path fill="currentColor" d="M7.41,15.41L12,10.83L16.59,15.41L18,14L12,8L6,14L7.41,15.41Z" />
        </svg>
    </div>
    <ul x-show="openSections.includes('{{ section.title }}')" class="ml-2">
        % for _, page in ipairs(section.pages) do
        % local x = page.refid == ctx.page.refid and " font-bold" or ""
        % print("page(" .. page.refid .. "), ctx.page(".. ctx.page.refid .. ") ->" .. tostring(x))
        <li class="hover:bg-gray-200 pl-2"><a href="{{ page.slug }}" class="text-gray-500 block w-full h-full py-2{{x}}">{{ page.title }}</a></li>
        % end
    </ul>
</li>
% @end

% @component menu
% for _, entry in pairs(conf.site) do
    % if conf.is_section(entry) then
{{@ menuSection { section = entry, page = ctx.page } }}
    % elseif conf.is_page(entry) then
    % local x = entry.refid == ctx.page.refid and " font-bold" or ""
    % print("entry(" .. entry.refid .. "), ctx.page(".. ctx.page.refid .. ") ->" .. tostring(x))
<li class="hover:bg-gray-200"><a href="{{ entry.slug }}" class="pl-2 text-blue-600 block w-full h-full py-2{{x}}">{{ entry.title }}</a></li>
    % end -- if
% end -- for
% @end

% @component base
% local section = conf.ref2section[ctx.page.refid]
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{{sitename}}</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="https://cdn.jsdelivr.net/gh/alpinejs/alpine@v2.x.x/dist/alpine.min.js" defer></script>
    <style>
        html, body { height: 100%; }
    </style>
</head>
<body class="bg-white flex flex-col h-full" x-data="initState()">
    <!-- Mobile top bar -->
    <div class="md:hidden fixed top-0 left-0 right-0 bg-white border-b border-gray-300 shadow-md shadow-gray-300/50 z-50">
        <div class="flex justify-between items-center p-4">
            <button @click="mobileMenuOpen = !mobileMenuOpen" class="text-gray-500">
                <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path>
                </svg>
            </button>
            <h1 class="text-lg font-semibold">{{sitename}}</h1>
        </div>
    </div>

    <!-- Mobile menu overlay -->
    <div x-show="mobileMenuOpen" class="fixed inset-0 bg-black bg-opacity-50 z-40 md:hidden" @click="mobileMenuOpen = false"></div>

    <div class="flex flex-1 overflow-hidden">
        <!-- Sidebar (desktop) / Mobile menu -->
        <div :class="{'fixed inset-y-0 left-0 transform translate-x-0 z-50': mobileMenuOpen, 'fixed inset-y-0 left-0 transform -translate-x-full z-50': !mobileMenuOpen, 'md:relative md:translate-x-0': true}"
             class="bg-gray-100 w-64 flex-shrink-0 border-r border-gray-200 transition-transform duration-300 ease-in-out overflow-y-auto h-full">
            <div class="pl-4">
                <nav class="text-sm">
                    <ul>
                        {{@ menu { page = ctx.page } }}
                    </ul>
                </nav>
            </div>
        </div>

        <!-- Main Content -->
        <div class="flex-1 overflow-y-auto p-4 md:p-10 mt-16 md:mt-0">
            <h1 class="text-2xl font-bold mb-5">{{ctx.title}}</h1>
            {{@ ctx.content ctx.ctx }}
        </div>
    </div>
    <script>
        function initState() {
            return {
                mobileMenuOpen: false,
                openSections: [
                % -- load page with parent section initially expanded
                % if section then
                ~>'{{section.title}}'
                % end
                ~>]
            }
        }
    </script>
</body>
</html>
% @end
